version: '2.4'

services:
  # nuxt:
  #   image: node:14.17
  #   volumes:
  #     - ./nuxt:/container/nuxt
  #   expose:
  #     - 3000
  #   environment:
  #     - VIRTUAL_HOST=blog.steinjun.net,www.blog.steinjun.net
  #     - VIRTUAL_PORT=3000
  #     - LETSENCRYPT_HOST=blog.steinjun.net,www.blog.steinjun.net
  #   command: 
  #     bash -c '
  #     cd /container/nuxt
  #     && npm ci
  #     && npm start
  #     && tail -F /dev/null'
  #     # && npm run https-dev

  react:
    image: node:14.17
    volumes:
      - ./react:/container/react
    expose:
      - 3000
    environment:
      - VIRTUAL_HOST=blog.steinjun.net,www.blog.steinjun.net
      - VIRTUAL_PORT=3000
      - LETSENCRYPT_HOST=blog.steinjun.net,www.blog.steinjun.net
    command: bash -c ' cd /container/react &&npm install -g serve && serve -s build && tail -F /dev/null' # && npm run https-dev

  django:
    build: ./django
    volumes:
      - ./django:/container/django
    expose:
      - 8000
    env_file:
      - ./django/.env
    environment:
      - VIRTUAL_HOST=api.blog.steinjun.net
      - VIRTUAL_PORT=8000
      - LETSENCRYPT_HOST=api.blog.steinjun.net
    command: bash -c ' cd /container/django/webcompose && poetry config virtualenvs.in-project true && poetry config virtualenvs.path "./.venv" && poetry install --no-interaction && poetry run python manage.py collectstatic --noinput && poetry run gunicorn --bind 0.0.0.0:8000 --reload webcompose.wsgi:application && tail -F /dev/null'
    depends_on:
      - postgres
  postgres:
    image: postgres:13.0-alpine
    volumes:
      - ./postgres-prod:/var/lib/postgresql/data/
    ports:
      - 5432:5432
    env_file:
      - ./.env.postgres

  # nginx:
  #   build: ./nginx
  #   volumes:
  #     - ./nginx:/container/nginx
  #     - ./django/webcompose/static:/container/django/webcompose/static
  #   ports:
  #     - 80:80
  #   depends_on:
  #     - nuxt
  #     - django


  nginx-proxy:
    build: ./nginx-proxy
    restart: always
    ports:
      - 80:80
      - 443:443
    volumes:
      - ./django:/container/django
      - ./react:/container/react
      - ./nginx-proxy/certs:/etc/nginx/certs
      - ./nginx-proxy/html:/usr/share/nginx/html
      - ./nginx-proxy/vhost.d:/etc/nginx/vhost.d
      - /var/run/docker.sock:/tmp/docker.sock:ro
    depends_on:
      - django
      - react
      # - nuxt

  nginx-proxy-letsencrypt:
    image: nginxproxy/acme-companion
    environment:
      - DEFAULT_EMAIL=junyoung4737@gamil.com
    volumes_from:
      - nginx-proxy
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - ./nginx-proxy/acme:/etc/acme.sh
    depends_on:
      - nginx-proxy
